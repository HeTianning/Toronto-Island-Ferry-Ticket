---
Title: "Analysis of Toronto Island Ferry Ticket Sales and Usage"
Subtitle: "Detailed Breakdown of Ticket Counts, Status, and Usage Patterns"
author: "He Tianning"
thanks: "Code and data are available at: https://github.com/HeTianning/Toronto-Island-Ferry-Ticket.git"
date: today
date-format: long
abstract: "Ferries depart from Jack Layton Ferry Terminal to Toronto Island Park throughout the year. I found some relevant data from Open Data Toronto to count the number and status of Toronto Island ferry tickets. This dataset provides near real-time information about ferry ticket sales and ticket redemption. Counts are provided in 15-minute intervals and updated every hour."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)

```


# Introduction

Ferries depart from Jack Layton Ferry Terminal to Toronto Island Park all year round. I want to count the number and status of Toronto Island Ferry tickets. Before downloading this data, I simulated what the data looked like and how it was distributed by understanding and analyzing the subject. After having a general idea of the data, I found some relevant data from Open Data Toronto, which provides near real-time information about ferry ticket sales and ticket redemption. The counts are updated every hour at 15-minute intervals. And downloaded this data. After downloading the data, I started to clean the data, cleaned and organized the data I needed to make the data simpler and clearer, and then tested the data. Finally, I used this data and R code to draw some images, and analyzed these images to get the number and status of Toronto Island Ferry tickets.

You can and should cross-reference sections and sub-sections. We use @citeR and @rohan.

The remainder of this paper is structured as follows. @sec-data....



# Data {#sec-data}
All the data comes from from @opendatatoronto.

Some of our data is of penguins (@fig-bills), from @opendatatoronto.

```{r}
#| label: fig-redemption
#| fig-cap: Redemption Count Over Time
#| echo: false

# Improved plot for Redemption Count over time
ggplot(cleaned_data, aes(x = Timestamp, y = `Redemption Count`)) +
  geom_line(color = 'darkred', size = 1.2) +  # Darker color and thicker line for clarity
  labs(
    title = 'Redemption Count Over Time',
    x = 'Timestamp',
    y = 'Redemption Count'
  ) +
  theme_minimal(base_size = 14) +  # Clean minimal theme for better readability
  theme(
    plot.title = element_text(face = "bold", size = 16),
    axis.title = element_text(face = "bold")
  )

# Distribution of Redemption Counts (Histogram)
ggplot(cleaned_data, aes(x = `Redemption Count`)) +
  geom_histogram(bins = 20, fill = 'lightgreen', color = 'black', alpha = 0.7) +  # Clear color contrast with outline
  labs(
    title = 'Distribution of Redemption Counts',
    x = 'Redemption Count',
    y = 'Frequency'
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16),
    axis.title = element_text(face = "bold")
  )

# Total Sales Count Over Time (Bar Plot)
ggplot(cleaned_data, aes(x = Timestamp, y = `Sales Count`)) +
  geom_bar(stat = 'identity', fill = 'dodgerblue', color = 'black') +  # Strong color and outline for better visibility
  labs(
    title = 'Total Sales Count Over Time',
    x = 'Hour of the Day',
    y = 'Total Sales Count'
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16),
    axis.title = element_text(face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1)  # Rotate x-axis labels for better readability
  )

# Distribution of Sales Counts (Histogram)
ggplot(cleaned_data, aes(x = `Sales Count`)) +
  geom_histogram(bins = 20, fill = 'darkorange', color = 'black', alpha = 0.7) +  # Use darker color for emphasis
  labs(
    title = 'Distribution of Sales Counts',
    x = 'Sales Count',
    y = 'Frequency'
  ) +
  theme_minimal(base_size = 14) +
  theme(
    plot.title = element_text(face = "bold", size = 16),
    axis.title = element_text(face = "bold")
  )

  
  
```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false


```

Talk way more about it. 


\newpage


# References


